"""
Main Program.

This is the main program for an interactive database.  The database will have a handful of functions that the user can select at any given time.


"""

#The most updated version of the database (as of 03/25/2019).


def database():
	master_mem = []
	mem_list = []
	spec_mem = []
	div_mem = []
	def spacer():
		print("\n"*5)
	def dotter():
		print(".\n.\n.\n.\n.\n.\n.\n.\n.\n.")
	spacer()
	if 1:
		spacer(); spacer()
		print("D A T A B A S E...")
		spacer()
	zx = 0
	while zx == 0:
		menu = input(". < ! > :  Please enter a command:  "); dotter()
		sg = 0
		if menu == "rest":
			dotter(); qw = input(". < ... >  :  Resting rn.  Press enter to continue."+" "*2); dotter(); dotter()
		if menu == "view":
			dotter(); print(master_mem); dotter()
		if menu == "add":
			dotter(); dotter();
			print("{1}1 - integer ... {0}{1}2 - string ... {0}{1}3 - boolean ... {0}{1}4 - float... {0}{1}5 - other... {0}{1}6 - none... {0}{0}".format("\n."*5, "-----> "))
			specify = input(". < ? > : Would you like to specify your inputs by data type? (yes/no) ")
			if specify == 'yes':
				spectype1 = input("Please enter the data type of your data batch:  ")
				if spectype1 == "integer":
					add_int = []
				if spectype1 == "string":
					add_str = []
				if spectype1 == "boolean":
					add_boo = []
				if spectype1 == "float":
					add_flo = []
				if spectype1 == "other":
					add_oth = []
				if spectype1 == "none":
					add_non = []
			elif specify == 'no':
				pass
			dotter(); dotter()
			mem = []; query = int(input(". < ! > : How many data points would you like to enter into the system (answer with an integer)?  "));
			dotter(); a = []; a.extend(" "*query); b = 0;
			while b < len(a):
				dotter; rr = input(". < ! > : Enter your data here:  "); dotter(); a[b] = rr; print(".{0}".format(a)); print(".\n."); mem_list.append(a[b]); master_mem.append(a[b]); b = b + 1
			if b == len(a):
				dotter(); c = input(". < ! > : **Press enter to finalize data entry.**  "); dotter(); dotter(); b = b + 1; sg = sg + 1
		if menu == "quit":
			zx = zx + 1
		if menu == "clear":
			master_mem = []
		if menu == "help":
			help_dir_map = print("{0}{1}1 - rest ... {0}{1}2 - view ... {0}{1}3 - quit ... {0}{1}4 - add... {0}{1}5 - help... {0}{0}".format("\n."*5, "-----> "))
			help_query = input(". < ? > : Please enter the name of the command you need help with:  "); dotter()
			if help_query == "rest":
				dotter()
				print(". < ? > : The 'Rest' command allows you to put the program into a 'sleep' mode.{0}By using this command, you can halt operations of the program, but reactivate the program by pressing the Enter key.".format("\n"))
				dotter()
			elif help_query == "view":
				dotter()
				print(". < ? > : The 'view' command allows you to view the data contained in the database.{0}.By using this command, you can view all available data sets within the system.  ".format("\n"))
				dotter()
			elif help_query == "quit":
				dotter()
				print(". < ? > : The 'quit' command shuts down the database.  You can restart the database by entering in the following command: 'database()'.  ")
				dotter()
			elif help_query == "add":
				dotter()
				print(". < ? > : The 'add' command allows you to add data to the database.  Each time you use the add command, you create a new 'batch' of data that is entered into the database.  All of the 'batches' that are created by you are stored in the database library, and can be recalled at any time.  ")
				dotter()
			elif help_query == "help":
				dotter()
				print(" < ? > : The 'help' command allows you to access the database's help menu, which provides instructions on how to use the database's commands and features.  ")
				dotter()
